import (
	"os"
	"os/signal"
	"syscall"
)

var timeToStop = false

func setupSignalHandler() {
	c := make(chan os.Signal, 1)

	// Listen for SIGINT (Ctrl+C), SIGTERM (termination), SIGHUP if needed
	signal.Notify(c, syscall.SIGINT, syscall.SIGTERM)

	go func() {
		sig := <-c
		// Just set the flag, like sigexit_handler()
		timeToStop = true
		fmt.Printf("Received signal: %s, preparing to stop...\n", sig)
	}()
}

func main() {
	setupSignalHandler()

	for {
		if timeToStop {
			fmt.Println("Time to exit gracefully!")
			break
		}

		// Your main loop work here
		time.Sleep(1 * time.Second)
	}
}

