---
apiVersion: v1
kind: Service
metadata:
  name: &app minio
  namespace: pgrwl-test
  labels:
    app: *app
spec:
  type: NodePort
  ports:
    - name: minio-console
      port: 9001
      targetPort: 9001
      nodePort: 30267
    - name: minio-server
      port: 9000
      targetPort: 9000
      nodePort: 30268
  selector:
    app: *app

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: minio-data
  namespace: pgrwl-test
spec:
  # NOTE: replace with pvc you're using in your infra.
  storageClassName: standard
  volumeMode: Filesystem
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: &app minio
  namespace: pgrwl-test
  labels:
    app: *app
data:
  TZ: "Asia/Aqtau"
  MINIO_ROOT_USER: "minioadmin"
  MINIO_ROOT_PASSWORD: "minioadmin123"

---
apiVersion: batch/v1
kind: Job
metadata:
  name: create-minio-buckets
  namespace: pgrwl-test
spec:
  template:
    spec:
      restartPolicy: OnFailure
      containers:
        - name: mc
          image: minio/mc:latest
          command:
            - /bin/sh
            - -c
            - |
              until mc alias set local https://minio:9000 minioadmin minioadmin123 --insecure; do
                echo "Waiting for MinIO...";
                sleep 2;
              done
              mc mb local/backups --insecure || true
              mc version enable local/backups --insecure

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: &app minio
  namespace: pgrwl-test
  labels:
    app: *app
spec:
  replicas: 1
  serviceName: *app
  selector:
    matchLabels:
      app: *app
  template:
    metadata:
      labels:
        app: *app
    spec:
      volumes:
        - name: storage
          persistentVolumeClaim:
            claimName: minio-data
        - name: dshm
          emptyDir:
            medium: Memory
        - name: minio-certs
          projected:
            sources:
              - secret:
                  name: minio-certs
      containers:
        - name: *app
          image: "minio/minio:latest"
          imagePullPolicy: IfNotPresent
          terminationMessagePolicy: FallbackToLogsOnError
          command:
            - /bin/bash
            - -c
          args:
            - minio server /data --console-address :9001
          ports:
            - containerPort: 9001
            - containerPort: 9000
          envFrom:
            - configMapRef:
                name: *app
          resources:
            limits:
              cpu: "1"
              memory: 1Gi
            requests:
              cpu: 128m
              memory: 256Mi
          volumeMounts:
            - mountPath: /data
              name: storage
            - mountPath: /dev/shm
              name: dshm
            - name: minio-certs
              mountPath: /root/.minio/certs
              readOnly: true
