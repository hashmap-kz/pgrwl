#!/usr/bin/env bash
set -euo pipefail
. /var/lib/postgresql/scripts/pg/pg.sh

# This is a 'golden' test, it checks that we're able to restore to the latest
# committed transaction, when a system is crashed abruptly.
# It also checks that wal-files generated are byte-by-byte the same that
# wal-files generated by 'pg_receivewal'.

export BASEBACKUP_PATH="/tmp/basebackup"
export WAL_PATH="/tmp/wal-archive"
export WAL_PATH_PG_RECEIVEWAL="/tmp/wal-archive-pg_receivewal"

x_backup_restore() {
  # rerun the cluster
  xpg_rebuild
  xpg_start

  # run wal-receiver
  bash "/var/lib/postgresql/scripts/pg/run_receiver.sh" "start"

  # run pg_receivewal
  bash "/var/lib/postgresql/scripts/pg/run_pg_receivewal.sh" "start"

  # make a basebackup before doing anything
  rm -rf "${BASEBACKUP_PATH}"
  mkdir -p "${BASEBACKUP_PATH}"
  pg_basebackup \
    --pgdata="${BASEBACKUP_PATH}/data" \
    --wal-method=none \
    --checkpoint=fast \
    --progress \
    --no-password \
    --verbose

  # run inserts in a background
  chmod +x "/var/lib/postgresql/scripts/pg/inserts.sh"
  nohup "/var/lib/postgresql/scripts/pg/inserts.sh" &

  # fill with 1M rows
  pgbench -i -s 10 postgres

  # wait a little
  sleep 5

  # stop inserts
  pkill -f inserts.sh

  # remember the state
  pg_dumpall -f /tmp/pg_dumpall-before

  # stop cluster, cleanup data
  xpg_teardown

  # restore from backup
  echo_delim "restoring backup"
  mv "${BASEBACKUP_PATH}/data" "${PGDATA}"
  chmod 0750 "${PGDATA}"
  chown -R postgres:postgres "${PGDATA}"
  touch "${PGDATA}/recovery.signal"

  # prepare archive (all partial files contain valid wal-segments)
  find "${WAL_PATH}" -type f -name "*.partial" -exec bash -c 'for f; do mv -v "$f" "${f%.partial}"; done' _ {} +
  find "${WAL_PATH_PG_RECEIVEWAL}" -type f -name "*.partial" -exec bash -c 'for f; do mv -v "$f" "${f%.partial}"; done' _ {} +

  # fix configs
  xpg_config
  cat <<EOF >>"${PG_CFG}"
restore_command = 'cp ${WAL_PATH}/%f %p'
EOF

  # cleanup logs
  >/var/log/postgresql/pg.log

  # run restored cluster
  echo_delim "running cluster"
  xpg_start

  # wait until is in recovery, check logs, etc...
  xpg_wait_is_in_recovery
  cat /var/log/postgresql/pg.log

  # check diffs
  echo_delim "running diff on pg_dumpall dumps (before vs after)"
  pg_dumpall -f /tmp/pg_dumpall-arter
  diff /tmp/pg_dumpall-before /tmp/pg_dumpall-arter

  # read the latest rec
  echo_delim "read latest applied records"
  echo "table content:"
  psql -c "select * from public.tslog;"
  echo "insert log content:"
  tail /tmp/insert-ts.log

  # compare with pg_receivewal
  echo_delim "compare wal-archive with pg_receivewal"
  bash "/var/lib/postgresql/scripts/utils/dircmp.sh" "${WAL_PATH}" "${WAL_PATH_PG_RECEIVEWAL}"
}

x_backup_restore "${@}"
