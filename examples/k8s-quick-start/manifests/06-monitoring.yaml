######################################################################
# prometheus
######################################################################

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-config
  namespace: mon
data:
  prometheus.yml: |+
    global:
      scrape_interval: 15s
    scrape_configs:
      - job_name: 'prometheus'
        static_configs:
          - targets: [ 'localhost:9090' ]
      - job_name: 'pgrwl'
        static_configs:
          - targets: [ 'pgrwl-receive:7070', 'pgrwl-backup:7070' ]

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: prometheus-data
  namespace: mon
spec:
  storageClassName: standard
  volumeMode: Filesystem
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi

---
apiVersion: v1
kind: Service
metadata:
  name: prometheus
  namespace: mon
spec:
  type: NodePort
  selector:
    app: prometheus
  ports:
    - protocol: TCP
      port: 9090
      targetPort: 9090
      nodePort: 30269

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: prometheus
  namespace: mon
spec:
  replicas: 1
  serviceName: prometheus
  selector:
    matchLabels:
      app: prometheus
  template:
    metadata:
      labels:
        app: prometheus
    spec:
      containers:
        - name: prometheus
          image: "prom/prometheus:v3.4.1"
          args:
            - "--config.file=/etc/prometheus/prometheus.yml"
          ports:
            - containerPort: 9090
          volumeMounts:
            - name: config-volume
              mountPath: /etc/prometheus
            - name: data-volume
              mountPath: /prometheus
          resources: { }
      volumes:
        - name: config-volume
          configMap:
            name: prometheus-config
        - name: data-volume
          persistentVolumeClaim:
            claimName: prometheus-data
            readOnly: false

######################################################################
# grafana
######################################################################

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: grafana-data
  namespace: mon
spec:
  storageClassName: standard
  volumeMode: Filesystem
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi

---
apiVersion: v1
kind: Service
metadata:
  name: grafana
  namespace: mon
spec:
  type: NodePort
  selector:
    app: grafana
  ports:
    - protocol: TCP
      port: 3000
      targetPort: 3000
      nodePort: 30270

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-datasources
  namespace: mon
  labels:
    grafana_datasource: "1"
data:
  prometheus.yaml: |
    apiVersion: 1
    datasources:
      - name: Prometheus
        type: prometheus
        access: proxy
        url: http://prometheus:9090
        isDefault: true
      - name: Loki
        type: loki
        access: proxy
        url: http://loki:3100
        jsonData:
          maxLines: 1000

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-dashboard-config
  namespace: mon
data:
  dashboards.yaml: |
    apiVersion: 1
    providers:
      - name: 'default'
        orgId: 1
        folder: ''
        type: file
        disableDeletion: false
        updateIntervalSeconds: 10
        options:
          path: /var/lib/grafana/dashboards

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
  namespace: mon
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
    spec:
      containers:
        - name: grafana
          image: "grafana/grafana:12.0.2"
          ports:
            - containerPort: 3000
          env:
            - name: GF_SECURITY_ADMIN_USER
              value: "admin"
            - name: GF_SECURITY_ADMIN_PASSWORD
              value: "admin"
          volumeMounts:
            - name: grafana-storage
              mountPath: /var/lib/grafana
            - name: grafana-datasources
              mountPath: /etc/grafana/provisioning/datasources
              readOnly: true
            - name: grafana-dashboard-config
              mountPath: /etc/grafana/provisioning/dashboards
              readOnly: true
            - name: grafana-dashboards
              mountPath: /var/lib/grafana/dashboards
              readOnly: true
          resources: { }
      volumes:
        - name: grafana-storage
          persistentVolumeClaim:
            claimName: grafana-data
            readOnly: false
        - name: grafana-datasources
          configMap:
            name: grafana-datasources
        - name: grafana-dashboard-config
          configMap:
            name: grafana-dashboard-config
        - name: grafana-dashboards
          configMap:
            name: grafana-dashboards

######################################################################
# loki
######################################################################

---
apiVersion: v1
kind: Service
metadata:
  name: loki
  namespace: mon
spec:
  ports:
    - name: http
      port: 3100
      targetPort: 3100
  selector:
    app: loki

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: loki-data
  namespace: mon
spec:
  storageClassName: standard
  volumeMode: Filesystem
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: loki
  namespace: mon
spec:
  selector:
    matchLabels:
      app: loki
  serviceName: loki
  replicas: 1
  template:
    metadata:
      labels:
        app: loki
    spec:
      containers:
        - name: loki
          image: "grafana/loki:2.9.15"
          args:
            - "-config.file=/etc/loki/loki-config.yml"
          ports:
            - containerPort: 3100
          volumeMounts:
            - name: config
              mountPath: /etc/loki
            - name: loki-data
              mountPath: /data/loki
          resources: { }
      volumes:
        - name: config
          configMap:
            name: loki-config.yml
        - name: loki-data
          persistentVolumeClaim:
            claimName: loki-data
            readOnly: false

######################################################################
# promtail
######################################################################

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: promtail
  namespace: mon
  labels:
    app: promtail

---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: promtail
  labels:
    app: promtail
rules:
  - apiGroups:
      - ""
    resources:
      - nodes
      - nodes/proxy
      - services
      - endpoints
      - pods
    verbs:
      - get
      - watch
      - list

---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: promtail
  labels:
    app: promtail
subjects:
  - kind: ServiceAccount
    name: promtail
    namespace: mon
roleRef:
  kind: ClusterRole
  name: promtail
  apiGroup: rbac.authorization.k8s.io

---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: promtail
  namespace: mon
  labels:
    app: promtail
spec:
  selector:
    matchLabels:
      app: promtail
  template:
    metadata:
      labels:
        app: promtail
    spec:
      serviceAccountName: promtail
      enableServiceLinks: true
      securityContext:
        runAsGroup: 0
        runAsUser: 0
      containers:
        - name: promtail
          image: "docker.io/grafana/promtail:2.9.15"
          imagePullPolicy: IfNotPresent
          args:
            - "-config.file=/etc/promtail/promtail-config.yml"
          volumeMounts:
            - name: config
              mountPath: /etc/promtail
            - mountPath: /run/promtail
              name: run
            - mountPath: /var/lib/docker/containers
              name: containers
              readOnly: true
            - mountPath: /var/log/pods
              name: pods
              readOnly: true
          env:
            - name: HOSTNAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: TZ
              value: Asia/Aqtau
          ports:
            - name: http-metrics
              containerPort: 3101
              protocol: TCP
          resources: { }
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            readOnlyRootFilesystem: true
      tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/control-plane
          operator: Exists
      volumes:
        - name: config
          configMap:
            name: promtail-config.yml
        - hostPath:
            path: /run/promtail
          name: run
        - hostPath:
            path: /var/lib/docker/containers
          name: containers
        - hostPath:
            path: /var/log/pods
          name: pods
