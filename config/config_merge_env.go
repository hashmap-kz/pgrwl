// Code generated by genmerge; DO NOT EDIT.

package config

import (
	"os"
	"strconv"
)

func mergeEnvIfUnset(cfg *Config) {
	if cfg == nil {
		return
	}
	if cfg.Mode == "" {
		if v, ok := os.LookupEnv("PGRWL_MODE"); ok && v != "" {
			cfg.Mode = v
		}
	}
	if cfg.Directory == "" {
		if v, ok := os.LookupEnv("PGRWL_DIRECTORY"); ok && v != "" {
			cfg.Directory = v
		}
	}
	if cfg.LogLevel == "" {
		if v, ok := os.LookupEnv("PGRWL_LOG_LEVEL"); ok && v != "" {
			cfg.LogLevel = v
		}
	}
	if cfg.LogFormat == "" {
		if v, ok := os.LookupEnv("PGRWL_LOG_FORMAT"); ok && v != "" {
			cfg.LogFormat = v
		}
	}
	if !cfg.LogAddSource {
		if v, ok := os.LookupEnv("PGRWL_LOG_ADD_SOURCE"); ok && v != "" {
			if b, err := strconv.ParseBool(v); err == nil {
				cfg.LogAddSource = b
			}
		}
	}
	if cfg.Slot == "" {
		if v, ok := os.LookupEnv("PGRWL_SLOT"); ok && v != "" {
			cfg.Slot = v
		}
	}
	if !cfg.NoLoop {
		if v, ok := os.LookupEnv("PGRWL_NO_LOOP"); ok && v != "" {
			if b, err := strconv.ParseBool(v); err == nil {
				cfg.NoLoop = b
			}
		}
	}
	if cfg.ListenPort == 0 {
		if v, ok := os.LookupEnv("PGRWL_LISTEN_PORT"); ok && v != "" {
			if i, err := strconv.Atoi(v); err == nil {
				cfg.ListenPort = i
			}
		}
	}
	if cfg.RestoreAddr == "" {
		if v, ok := os.LookupEnv("PGRWL_RESTORE_ADDR"); ok && v != "" {
			cfg.RestoreAddr = v
		}
	}
	if cfg.StorageType == "" {
		if v, ok := os.LookupEnv("PGRWL_STORAGE_TYPE"); ok && v != "" {
			cfg.StorageType = v
		}
	}
	if cfg.CompressionAlgo == "" {
		if v, ok := os.LookupEnv("PGRWL_COMPRESSION_ALGO"); ok && v != "" {
			cfg.CompressionAlgo = v
		}
	}
	if cfg.EncryptionAlgo == "" {
		if v, ok := os.LookupEnv("PGRWL_ENCRYPTION_ALGO"); ok && v != "" {
			cfg.EncryptionAlgo = v
		}
	}
	if cfg.EncryptionPass == "" {
		if v, ok := os.LookupEnv("PGRWL_ENCRYPTION_PASS"); ok && v != "" {
			cfg.EncryptionPass = v
		}
	}
	if cfg.SFTPHost == "" {
		if v, ok := os.LookupEnv("PGRWL_SFTP_HOST"); ok && v != "" {
			cfg.SFTPHost = v
		}
	}
	if cfg.SFTPPort == 0 {
		if v, ok := os.LookupEnv("PGRWL_SFTP_PORT"); ok && v != "" {
			if i, err := strconv.Atoi(v); err == nil {
				cfg.SFTPPort = i
			}
		}
	}
	if cfg.SFTPUser == "" {
		if v, ok := os.LookupEnv("PGRWL_SFTP_USER"); ok && v != "" {
			cfg.SFTPUser = v
		}
	}
	if cfg.SFTPPass == "" {
		if v, ok := os.LookupEnv("PGRWL_SFTP_PASS"); ok && v != "" {
			cfg.SFTPPass = v
		}
	}
	if cfg.SFTPPkeyPath == "" {
		if v, ok := os.LookupEnv("PGRWL_SFTP_PKEY_PATH"); ok && v != "" {
			cfg.SFTPPkeyPath = v
		}
	}
	if cfg.SFTPPkeyPass == "" {
		if v, ok := os.LookupEnv("PGRWL_SFTP_PKEY_PASS"); ok && v != "" {
			cfg.SFTPPkeyPass = v
		}
	}
	if cfg.S3URL == "" {
		if v, ok := os.LookupEnv("PGRWL_S3_URL"); ok && v != "" {
			cfg.S3URL = v
		}
	}
	if cfg.S3AccessKeyID == "" {
		if v, ok := os.LookupEnv("PGRWL_S3_ACCESS_KEY_ID"); ok && v != "" {
			cfg.S3AccessKeyID = v
		}
	}
	if cfg.S3SecretAccessKey == "" {
		if v, ok := os.LookupEnv("PGRWL_S3_SECRET_ACCESS_KEY"); ok && v != "" {
			cfg.S3SecretAccessKey = v
		}
	}
	if cfg.S3Bucket == "" {
		if v, ok := os.LookupEnv("PGRWL_S3_BUCKET"); ok && v != "" {
			cfg.S3Bucket = v
		}
	}
	if cfg.S3Region == "" {
		if v, ok := os.LookupEnv("PGRWL_S3_REGION"); ok && v != "" {
			cfg.S3Region = v
		}
	}
	if !cfg.S3UsePathStyle {
		if v, ok := os.LookupEnv("PGRWL_S3_USE_PATH_STYLE"); ok && v != "" {
			if b, err := strconv.ParseBool(v); err == nil {
				cfg.S3UsePathStyle = b
			}
		}
	}
	if !cfg.S3DisableSSL {
		if v, ok := os.LookupEnv("PGRWL_S3_DISABLE_SSL"); ok && v != "" {
			if b, err := strconv.ParseBool(v); err == nil {
				cfg.S3DisableSSL = b
			}
		}
	}
}
